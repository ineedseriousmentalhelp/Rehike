<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: browse_request_params.proto

namespace Com\Youtube\Innertube\Request\BrowseRequestParams;

use UnexpectedValueException;

/**
 * Protobuf type <code>com.youtube.innertube.request.BrowseRequestParams.LiveView</code>
 */
class LiveView
{
    /**
     * Generated from protobuf enum <code>DEFAULT_LIVEVIEW = 0;</code>
     */
    const DEFAULT_LIVEVIEW = 0;
    /**
     * Generated from protobuf enum <code>ALL = 1;</code>
     */
    const ALL = 1;
    /**
     * Generated from protobuf enum <code>LIVE = 2;</code>
     */
    const LIVE = 2;
    /**
     * Generated from protobuf enum <code>UPCOMING = 3;</code>
     */
    const UPCOMING = 3;
    /**
     * Generated from protobuf enum <code>PAST = 4;</code>
     */
    const PAST = 4;

    private static $valueToName = [
        self::DEFAULT_LIVEVIEW => 'DEFAULT_LIVEVIEW',
        self::ALL => 'ALL',
        self::LIVE => 'LIVE',
        self::UPCOMING => 'UPCOMING',
        self::PAST => 'PAST',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(LiveView::class, \Com\Youtube\Innertube\Request\BrowseRequestParams_LiveView::class);

